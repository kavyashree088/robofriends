{"ast":null,"code":"var _jsxFileName = \"/Users/kavyashreechandrashekar/Documents/Udemy/robofriends/src/containers/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport \"./App.css\";\nimport Scroll from \"../components/Scroll\";\nimport { robots } from \"./Robots\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    this.state = {\n      robots: [],\n      searchfield: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos/\").then(response => {\n      response.json();\n    }).then(json => {\n      console.log(json);\n      this.setState({\n        robots: robots\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.robots.length);\n\n    if (this.state.robots.length === 0) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 14\n        }\n      }, \"Loading\");\n    } else {\n      const filteredRobots = this.state.robots.filter(robots => {\n        return robots.name.toLocaleLowerCase().includes(this.state.searchfield.toLocaleLowerCase());\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"f1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, \"Robo Friends\"), /*#__PURE__*/React.createElement(SearchBox, {\n        searchChange: this.onSearchChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Scroll, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CardList, {\n        robots: filteredRobots,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      })));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kavyashreechandrashekar/Documents/Udemy/robofriends/src/containers/App.js"],"names":["React","Component","CardList","SearchBox","Scroll","robots","App","constructor","onSearchChange","event","setState","searchfield","target","value","state","componentDidMount","fetch","then","response","json","console","log","render","length","filteredRobots","filter","name","toLocaleLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,MAAT,QAAuB,UAAvB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,GAAG;AACZ;;AADY,SAmBdC,cAnBc,GAmBIC,KAAD,IAAW;AAC1B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd;AACD,KArBa;;AAEZ,SAAKC,KAAL,GAAa;AACXT,MAAAA,MAAM,EAAE,EADG;AAEXM,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AACDI,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,6CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClBA,MAAAA,QAAQ,CAACC,IAAT;AACD,KAHH,EAIGF,IAJH,CAISE,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAKT,QAAL,CAAc;AACZL,QAAAA,MAAM,EAAEA;AADI,OAAd;AAGD,KATH;AAUD;;AAIDiB,EAAAA,MAAM,GAAG;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWT,MAAX,CAAkBkB,MAA9B;;AACA,QAAI,KAAKT,KAAL,CAAWT,MAAX,CAAkBkB,MAAlB,KAA6B,CAAjC,EAAoC;AAClC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD,KAFD,MAEO;AACL,YAAMC,cAAc,GAAG,KAAKV,KAAL,CAAWT,MAAX,CAAkBoB,MAAlB,CAA0BpB,MAAD,IAAY;AAC1D,eAAOA,MAAM,CAACqB,IAAP,CACJC,iBADI,GAEJC,QAFI,CAEK,KAAKd,KAAL,CAAWH,WAAX,CAAuBgB,iBAAvB,EAFL,CAAP;AAGD,OAJsB,CAAvB;AAKA,0BACE;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKnB,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAEgB,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAHF,CADF;AASD;AACF;;AA3CyB;;AA8C5B,eAAelB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport \"./App.css\";\nimport Scroll from \"../components/Scroll\";\nimport { robots } from \"./Robots\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos/\")\n      .then((response) => {\n        response.json();\n      })\n      .then((json) => {\n        console.log(json);\n        this.setState({\n          robots: robots,\n        });\n      });\n  }\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n  };\n  render() {\n    console.log(this.state.robots.length);\n    if (this.state.robots.length === 0) {\n      return <h1>Loading</h1>;\n    } else {\n      const filteredRobots = this.state.robots.filter((robots) => {\n        return robots.name\n          .toLocaleLowerCase()\n          .includes(this.state.searchfield.toLocaleLowerCase());\n      });\n      return (\n        <div className=\"tc\">\n          <h1 className=\"f1\">Robo Friends</h1>\n          <SearchBox searchChange={this.onSearchChange}></SearchBox>\n          <Scroll>\n            <CardList robots={filteredRobots}></CardList>\n          </Scroll>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}